@model PaginatedList<ContosoUniversity.Models.Student>
@{
    ViewData["Title"] = "Index";
}

<a asp-action="Create" class="btn btn-info">Create New</a>

<form asp-action="Index" method="get">
    <p>
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-outline-secondary"> | <a asp-action="Index" class="btn btn-dark">Back to full list</a>
    </p>
    
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-searchString="@ViewData["CurrentFilter"]">Last Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-searchString="@ViewData["CurrentFilter"]">Enrollment Date</a>
            </th>
            <th>
                Controls
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(m => student.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(m => student.LastName)
                </td>
                <td>
                    @Html.DisplayFor(m => student.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@student.Id">Update</a> |
                    <a asp-action="Delete" asp-route-id="@student.Id">Delete</a> |
                    <a asp-action="Details" asp-route-id="@student.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    <a class="btn btn-outline-secondary @prevDisabled" asp-action="Index" asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageIndex="@(Model.PageIndex-1)">Previous Page</a>
    <a class="btn btn-outline-secondary @nextDisabled" asp-action="Index" asp-route-searchString="@ViewData["CurrentFilter"]" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageIndex="@(Model.PageIndex+1)">Next Page</a>

}

